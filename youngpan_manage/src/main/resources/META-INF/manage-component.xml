<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd   
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd ">
    <!-- base config -->
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	    <property name="locations">  
	        <list>  
	            <value>classpath*:/META-INF/manage-config.properties</value>    
	        </list>  
	    </property>  
	</bean>
    
	<context:annotation-config />
	<context:component-scan base-package="com.wzy.design" />

	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="100" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
		<!--连接关闭时默认将所有未提交的操作回滚。Default: false -->
		<property name="autoCommitOnClose" value="false"/>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3" />
		
		<property name="initialPoolSize" value="10" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="600" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="1" />
		<!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="500"/>
		<!-- 数据库和网络故障恢复之后，pool能继续请求正常资源 -->
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckout" value="false" />
		<!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意：  测试的表必须在初始数据源的时候就存在。Default: null-->
		<property name="preferredTestQuery" value="select 1"/>
	</bean>
	
	<!-- 建立sessionFactory，与hibernate进行关联 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath*:/META-INF/hbm/*.hbm.xml</value>
			</list>
		</property>
		<!-- <property name="packagesToScan" value="com/wzy/design/entity"/> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>
	
	<!-- 添加调度的任务bean 配置对应的class-->  
    <bean id="trashSchedule" class="com.wzy.design.quartz.TrashQuartz" />  
  
    <!--配置调度具体执行的方法-->  
    <bean id="trashDetail"  
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject" ref="trashSchedule" />  
        <property name="targetMethod" value="cleanTrash" />  
        <property name="concurrent" value="false" />  
    </bean>  
  
    <!--配置调度执行的触发的时间-->  
    <bean id="trashTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail" ref="trashDetail"/>  
        <property name="cronExpression">  
            <!-- 每天早上2点执行任务调度 -->  
            <value>0 0 22 * * ?</value>  
        </property>  
    </bean>  
  
      
  
    <!-- quartz的调度工厂 调度工厂只能有一个，多个调度任务在list中添加 -->  
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list>  
                 <!-- 所有的调度列表-->  
                <ref local="trashTrigger" />  
                  
            </list>  
        </property>  
    </bean>  

	<!--  核心线程池，运行系统一些初始化任务等，线程池 调整 说明 参考 本工程 readme.txt -->
	<!-- <bean id="coreTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="1" />
		<property name="maxPoolSize" value="100" />
		<property name="queueCapacity" value="5000" />
		<property name="threadNamePrefix" value="filesync" />
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy" />
		</property>
	</bean> -->
	
	
	<!-- <beans profile="test">

		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
			<property name="url" value="jdbc:hsqldb:mem:data" />
			<property name="username" value="sa" />
			<property name="password" value="11" />
		</bean>

		建立sessionFactory，与hibernate进行关联
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="mappingLocations">
				<list>
					<value>classpath*:/META-INF/hbm/*.hbm.xml</value>
				</list>
			</property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
					<prop key="hibernate.show_sql">${test.hibernate.show_sql}</prop>
					<prop key="hibernate.format_sql">true</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>
				</props>
			</property>
		</bean>
	</beans> -->
</beans>